def cls() print "\e[H\e[J"                        # clear the screen
def hide() print "\e[?25l"                        # hide the cursor
def show() print "\e[?25h"                        # show the cursor
def pos(x, y) print "\e[", x, "G\e[", y, "d"      # position the cursor
def wait()                                        # short delay (adjust to speed of your computer)
  i=0
  while i<500 i=i+1    
  
def drawIntro()
  cls()
  pos(3, 8) print "M I N I M A L   C P U   B L O C K S"
  pos(4, 13) print "written in  M I N  by slu4 (2022)"
  pos(11, 22) print "Press SPACE or ESC"
  
def drawScreen()
  cls()
  i=0
  while i<21
    pos(13, i) print "<!..........!>"
    i=i+1
  pos(13, 21) print "<!==========!>"
  pos(13, 22) print "  VVVVVVVVVV  "
  pos(1, 1) print "SCORE 0"
  pos(28, 1) print "HIGH ", high
  pos(1, 4) print "CONTROLS"
  pos(1, 5) print "A - Left"
  pos(1, 6) print "D - Right"
  pos(1, 7) print "W - Rotate"
  pos(1, 8) print "S - Drop"

def newShape()
  drawShape(nextshape, " ", 31, 5)
  shape = nextshape px=4 py=1 m=rnd()/37
  nextshape = minos[10*m..10*m+10]
  drawShape(nextshape, "\#", 31, 5)
  return testShape(px, py)

def drawShape(sh, b, x, y)
  i=0
  while i<8
    pos(x+sh[i], y+sh[i+1]) print b
    i=i+2

def testShape(x, y)
  i=0
  while i<8
    if x+shape[i] < 0 or x+shape[i] > 9 return 0
    if y+shape[i+1] < 0 or y+shape[i+1] > 19 return 0
    if vram[x+shape[i] + (y+shape[i+1])*10] != '.' return 0
    i=i+2
  return 1

def rotShape()
  rotshape = [0,0,0,0,0,0,0,0, 0,0]
  i=0
  while i<10
    rotshape[i]   =  shape[i+1]
    rotshape[i+1] = -shape[i]
    i=i+2
  shape=rotshape
  px=px+shape[8] py=py+shape[9]                     # add rotated offset correction

def placeShape()
  i=0                                               # write current shape in field
  while i<8
    vram[px+shape[i] + (py+shape[i+1])*10] = '\#'
    i=i+2

def updateField()
  rows=0 i=0                                        # count rows cleared
  while i<20
    if vram[i*10..i*10+10] == "\#\#\#\#\#\#\#\#\#\#"
      vram=".........." + vram[0..i*10] + vram[i*10+10..200]
      rows=rows+1
    i=i+1
  score=score+bonus[rows]

def drawField()
  i=0
  while i<20 pos(15, i+1) print vram[i*10..i*10+10] i=i+1

def clearField()
  vram="" i=0
  while i<20 vram=vram+".........." i=i+1

def doState()                                       # GAME STATE HANDLER
  if state == 0 drawIntro() state=1                 # Intro

  elif state == 1                                   # Start
    r = rnd() 			                                # randomize generator
    if inkey == '\e' state=-1
    if inkey == ' '
      clearField() drawScreen() drawField()
      newShape() newShape() drawShape(shape, "\#", 15+px, 1+py)
      frames=0 waiting=60 score=0 state=2

  elif state == 2                                   # Play
    frames=frames+1 waiting=waiting-1
    if inkey != 255                                 # CONTROL
      if inkey == '\e' state=0
      elif inkey == 's' waiting=waiting-60 score=score+1
      else
        drawShape(shape, ".", 15+px, 1+py)
        if inkey == 'a'
          if testShape(px-1, py) px=px-1
        elif inkey == 'd'
          if testShape(px+1, py) px=px+1
        elif inkey == 'w'
          rotShape()                                # rotate ccw
          if not testShape(px, py)                  # blocked?
            if testShape(px-1, py) px=px-1          # test sideways
            elif testShape(px+1, py) px=px+1
            elif testShape(px-2, py) px=px-2
            elif testShape(px+2, py) px=px+2
            else rotShape() rotShape() rotShape()   # take back the rotation
        drawShape(shape, "\#", 15+px, 1+py)

    if waiting < 0                                  # FALLING
      waiting=waiting+60-frames/512
      drawShape(shape, ".", 15+px, 1+py)
      if testShape(px, py+1) py=py+1 drawShape(shape, "\#", 15+px, 1+py)
      else
        placeShape()
        updateField()
        drawField()
        pos(7, 1) print score
        if score > high high=score pos(33, 1) print high
        if newShape() drawShape(shape, "\#", 15+px, 1+py)
        else state=3

  elif state == 3                                   # Game Over
    pos(15, 11) print "GAME  OVER"
    pos(11, 24) print "Press SPACE or ESC"
    state = 4

  elif state == 4                                   # Restart
    if inkey == '\e' or inkey == ' ' state=0

state = 0 score = 0 high = 7297                     # GLOBAL STATE
px = 0 py = 0 inkey = 0 vram = ""                   # tetromino position and 10x20 vram
frames = 0 waiting = 0                              # timing
bonus =         [ 0, 40, 100, 200, 500 ]            # bonus points depending on number of cleared rows
shape =         [ 0,0,0,0,0,0,0,0,     0,0 ]        # current shape and offset
nextshape =     [ 0,0,0,0,0,0,0,0,     0,0 ]        # next shape preview

minos =         [ -1,-1,0,-1,0,0,1,0,  0,0 ]        # Z
minos = minos + [ -1,0,0,0,0,-1,1,-1,  0,0 ]        # neg. Z
minos = minos + [ -1,0,0,0,1,0,2,0,    0,1 ]        # I
minos = minos + [ -1,0,0,0,1,0,0,-1,   0,0 ]        # stairs
minos = minos + [ -1,-1,-1,0,0,0,1,0,  0,0 ]        # L
minos = minos + [ -1,0,0,0,1,0,1,-1,   0,0 ]        # neg. L
minos = minos + [ 0,0,1,0,0,-1,1,-1,   0,1 ]        # square

hide()                                              # MAIN PROGRAM

while state >= 0
  inkey=key()
  doState()
  wait()

show()
cls()
