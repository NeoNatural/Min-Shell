def goto(x, y)
  print "\e[" + str(x) + "G\e[" + str(y) + "d"

def drawIntro()
  print "\e[H\e[J"        # clear the screen
  goto (3, 11) print "M I N I M A L   C P U   B L O C K S"
  goto (4, 15) print "written in  M I N  by slu4 (2022)"
  goto (11, 24) print "Press SPACE or ESC"
  
def drawScreen()
  print "\e[H\e[J"        # clear the screen
  i=0
  while i<21
    goto(13, i) print "<!..........!>"
    i=i+1
  goto(13, 21) print "<!==========!>"
  goto(13, 22) print "  VVVVVVVVVV  "
  goto(1, 1) print "SCORE 0"
  goto(28, 1) print "HIGH ", str(high)
  goto(1, 4) print "CONTROLS"
  goto(1, 5) print "A - Left"
  goto(1, 6) print "D - Right"
  goto(1, 7) print "W - Rotate"
  goto(1, 8) print "S - Drop"

def newShape()
  m=7 px=4 py=1
  while m > 6 m=random()/36
  shape = minos[10*m..10*m+10]
  return testShape(px, py)

def drawShape(s)
  i=0
  while i<8
    goto(15+px+shape[i], 1+py+shape[i+1]) print s
    i=i+2

def testShape(x, y)
  i=0
  while i<8
    if x+shape[i] < 0 or x+shape[i] > 9 return 0
    if y+shape[i+1] < 0 or y+shape[i+1] > 19 return 0
    if vram[x+shape[i] + (y+shape[i+1])*10] != '.' return 0
    i=i+2
  return 1

def rotShape()
  rotshape = [0,0,0,0,0,0,0,0, 0,0]
  i=0
  while i<10
    rotshape[i]   =  shape[i+1]
    rotshape[i+1] = -shape[i]
    i=i+2
  shape=rotshape
  px=px+shape[8] py=py+shape[9]                       # add rotated offset correction

def placeShape()
  i=0                                                 # write current shape in field
  while i<8
    vram[px+shape[i] + (py+shape[i+1])*10] = '\#'
    i=i+2

def updateField()
  rows=0 i=0                                          # count the number of rows cleared
  while i<20
    if vram[i*10..i*10+10] == "\#\#\#\#\#\#\#\#\#\#"
      vram=".........." + vram[0..i*10] + vram[i*10+10..200]
      rows=rows+1
    i=i+1
  score=score+bonus[rows]

def drawField()
  i=0
  while i<20 goto(15, i+1) print vram[i*10..i*10+10] i=i+1

def clearField()
  vram="" i=0
  while i<20 vram=vram+".........." i=i+1

def doState()                                       # GAME STATE HANDLER
  if state == 0 drawIntro() state=1
  elif state == 1
    if inkey == '\e' state=-1
    if inkey == ' '
      clearField() drawScreen() drawField()
      newShape() drawShape("\#")
      frames=0 waiting=600 score=0 state=2
  elif state == 2
    frames=frames+1 waiting=waiting-1
    if inkey != 0
      if inkey == '\e' state=0
      elif inkey == 's' waiting=waiting-600 score=score+1
      else
        drawShape(".")
        if inkey == 'a'
          if testShape(px-1, py) px=px-1
        elif inkey == 'd'
          if testShape(px+1, py) px=px+1
        elif inkey == 'w'
          rotShape()                                         # rotate shape ccw
          if not testShape(px, py)                           # is it blocked?
            if testShape(px-1, py) px=px-1                   # test left
            elif testShape(px+1, py) px=px+1                 # test right
            elif testShape(px-2, py) px=px-2
            elif testShape(px+2, py) px=px+2
            else rotShape() rotShape() rotShape()            # no way => take back the rotation
        drawShape("\#")
    if waiting < 0
      waiting=waiting+600-frames/512
      drawShape(".")
      if testShape(px, py+1) py=py+1 drawShape("\#")
      else
        placeShape()
        updateField()
        drawField()
        goto(7, 1) print str(score)
        if score > high high=score goto(33, 1) print str(high)
        if newShape() drawShape("\#")                            # pick a new shape if possible
        else state=3
  elif state == 3
    goto(15, 11) print "GAME  OVER"
    goto (11, 24) print "Press SPACE or ESC"
    state = 4
  elif state == 4
    if inkey == '\e' or inkey == ' ' state=0

# GLOBAL VARIABLES

state = 0 score = 0 high = 0                  # game state and scores
px = 0 py = 0 inkey = 0 vram = ""             # tetromino position and 10x20 vram
frames = 0 waiting = 0                        # timing
bonus =         [ 0, 40, 100, 200, 500 ]      # bonus points depending on number of cleared rows
shape =         [ 0,0,0,0,0,0,0,0,     0,0 ]  # current shape and offset

minos =         [ -1,-1,0,-1,0,0,1,0,  0,0 ]  # Z
minos = minos + [ -1,0,0,0,0,-1,1,-1,  0,0 ]  # neg. Z
minos = minos + [ -1,0,0,0,1,0,2,0,    0,1 ]  # I
minos = minos + [ -1,0,0,0,1,0,0,-1,   0,0 ]  # stairs
minos = minos + [ -1,-1,-1,0,0,0,1,0,  0,0 ]  # L
minos = minos + [ -1,0,0,0,1,0,1,-1,   0,0 ]  # neg. L
minos = minos + [ 0,0,1,0,0,-1,1,-1,   0,1 ]  # square

# MAIN PROGRAM

print "\e[?25l"                               # hide cursor

while state >= 0                              # game loop
  inkey=key()
  doState()

print "\e[H\e[J"                          # clear the screen
print "\e[?25h"                           # show cursor
